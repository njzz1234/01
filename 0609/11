[ post export ( EMP 사원) ]
   oracle sql  

select e1.empno as empno
, e1.ename as ename
, e1.job as job
, e2.ename as mgr_name -- 매니저이름
, d.dname as dname
, e1.hiredate as hiredate
, (to_char(sysdate,'yyyy') - to_char(e1.hiredate,'yyyy')) as year1
 from 
  emp e1, emp e2, dept d
  where 
   e1.mgr = e2.empno
   and
   e1.deptno = d.deptno
   

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

post import -> csv를 테이블로 변환
post export -> emp, post를 txt로변환

post search -> 우편번호 찾기


숙제

나이스 학생서비스

주제 : 성적관리 시스템
검색 >>
학년>> 1
학기>> 2
ㅡㅡㅡㅡㅡㅡㅡㅡㅡ
학생 id : test1
학생명 : 홍길동
소속학교 : 하이미디어 고등학교
학년 : 1학년
학기 : 2학기
ㅡㅡㅡㅡㅡㅡ
번호 영어 국어 수학 합계 평균 (반)석차 (전교)석차
 1   90  80    70  230  80    5/10    15/50
 2   85  90    90  260  86    3/10    10/50
                    총계 83    4/10    13/50

테이블 : 아이디,이름,학교명,생년월일,성별
테이블 영어점수,국어점수,수학점수,학년,학기,회차

1. 대량 데이터 임포트
2. 정보입력, 정보변경, 정보삭제, 정보출력(전체학생출력, 학생성적출력)
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
1.학생목록
(1) 정보입력 (2)정보변경 (3)정보삭제 (4)정보출력
2. 성적조회
3. 데이터임포트

public static void scoreSearch() throws Exception{
      Statement stmt = Connection().createStatement();
      Scanner scn = new Scanner(System.in);
      System.out.println("조회할 학생 아이디를 입력해주세요");
      System.out.println("아이디>>");
      String userid = scn.next();
         //아이디검사
         String sql = "select count(*) cnt from student_info where userid='"+userid+"'";
         ResultSet rs1 = stmt.executeQuery(sql);
         int cnt= 0;
         if (rs1.next() ) {
            cnt = rs1.getInt("cnt");
         }else {
            return;
         }
         if(cnt==0) {
            System.out.println("조회할 학생아이디가 존재하지 않습니다.");
            return;
         }
      System.out.println("학년>>");
      int grade = scn.nextInt();
      
      System.out.println("학기>>");
      int hakgi =scn.nextInt();
      

      String sql2 ="           select c.*from"
            + "               (select b.*,rank()over (order by avg desc) classrank "
            + "                from (select a.*,rank()over (order by avg desc) schoolrank "
            + "                from(select i.userid userid,i.name name,i.school school,s.grade grade,s.hakgi hakgi,s.ban ban,round((s.eng+s.kor+s.math)/3) avg,eng,kor,math,(eng+kor+math) hap"
            + "                    from student_info i,student_score s"
            + "                    where i.userid=s.userid "
            + "                            and s.grade='"+grade+"'"
            + "                            and s.hakgi='"+hakgi+"'"
            + "                            order by avg desc)a)b"
            + "                            where ban = (select ban from student_score where userid='"+userid+"' and grade='"+grade+"' and hakgi='"+hakgi+"'))c"
            + "                            where userid ='"+userid+"'";
      ResultSet rs2 = stmt.executeQuery(sql2);
      while(rs2.next()) {
         String name =rs2.getString("name");
         String school = rs2.getString("school");
         String eng = rs2.getString("eng");
         String kor = rs2.getString("kor");
         String math =rs2.getString("math");
         String hap = rs2.getString("hap");
         String avg = rs2.getString("avg");
         String classrank = rs2.getString("classrank");
         String schoolrank = rs2.getString("schoolrank");
         
         System.out.println("[성적조회 결과]");
         System.out.println("학생ID: "+userid);
         System.out.println("학생명: "+name);
         System.out.println("소속학교: "+school);
         System.out.println("학년: "+grade+"학년");
         System.out.println("학기: "+hakgi+"학기");
         System.out.println("영어\s 국어\s 수학\s 합계\s 평균\s (반)석차\s (전교)석차");
         System.out.println(eng+"\s   "+kor+"\s "+math+"\s  "+hap+"\s "+avg+"\s   ("+classrank+"/5)\s   ("+schoolrank+"/10)");
      }
   }


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
sql 내가햇던거
select b.*,rownum 반등수 from
(select a.*,rownum 전체등수 from ( select eng, kor, math,(eng+kor+math) as 합계 , (eng+kor+math)/3 as 평균, ban
 from student_score s, student_info i
 where s.userid=i.userid  order by 평균 desc ) a)b where ban='1' order by 평균 desc;

답
      String sql2 ="           select c.*from"
            + "               (select b.*,rank()over (order by avg desc) classrank "
            + "                from (select a.*,rank()over (order by avg desc) schoolrank "
            + "                from(select i.userid userid,i.name name,i.school school,s.grade grade, "
            + " s.hakgi hakgi,s.ban ban,round((s.eng+s.kor+s.math)/3) avg,eng,kor,math,(eng+kor+math) hap"
            + "                    from student_info i,student_score s"
            + "                    where i.userid=s.userid "
            + "                            and s.grade='"+grade+"'"
            + "                            and s.hakgi='"+hakgi+"'"
            + "                            order by avg desc)a)b"
            + "                            where ban = (select ban from student_score where userid='"+userid+"' "
            + " and grade='"+grade+"' and hakgi='"+hakgi+"'))c"
            + "                            where userid ='"+userid+"'";


row_number()over (order by 평균 desc)
rank()over (order by avg desc)



------------------------------------
     성적조회 시스템

-------------------------------------

- 학생정보목록

- 학생성적조회

- 데이터임포트

 

(작업조건)

1. 텍스트 데이터의  일괄 입력이 가능하다.
post import
2. 학생 목록 조회가 가능하다.
post search / empselect
3. 학생정보의 개별입력이 가능하다.
emp insert
4. 학생정보의 개별변경이 가능하다.
emp update
5. 학생정보의 개별삭제가 가능하다. ( 학생정보 삭제 시 성적도 삭제 )
emp delete
6. 학생 성적조회가 가능하다.
emp search
 
 
이클립스 ide / sql 

(성적조회 출력예시)

 

1. 검색ID >> test11
2. 학년>> 1
3. 학기>> 2
---------------------------

[성적조회결과]

학생ID : test1
학생명  : 홍길동
소속학교 : 하이미디어고등학교
학년 : 1학년
학기 : 2학기
---------------------------------------
번호 영어 국어 수학 합계  평균 (반)석차 (전교)석차
 1  90  80  70  230  80   5/10    15/50
 2  80  90  90  260  86   3/10    10/50
---------------------------------------
                총계  83   4/10    13/50  

>>전체
번호 학생ID 이름 성별 생년월일


